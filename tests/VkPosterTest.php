<?php

use GuzzleHttp\Client;
use Instagram2Vk\Classes\InstagramCrawler;
use Instagram2Vk\Classes\VkPoster;
use Instagram2Vk\Classes\VkPostTimeScheduler;
use Instagram2Vk\Classes\VkPostTransformer;


class VkPosterTest extends PHPUnit_Framework_TestCase
{

    private $transformer = null;
    private $scheduler = null;
    private $client = null;
    private $access_token = null;

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->transformer = new VkPostTransformer();
        $this->scheduler = new VkPostTimeScheduler();
        $this->client = new Client();

        $this->access_token = getenv('VK_ACCESS_TOKEN');
        $this->instagram_access_token = getenv('INSTAGRAM_ACCESS_TOKEN');
        $this->instagram_access_token_username = getenv('INSTAGRAM_ACCESS_TOKEN_USERNAME');
        $this->group_id = getenv('VK_GROUP_ID');

    }


    public function test_instantiation()
    {

        // mock data Source
        $sample_data = [
            ["a"],
            ["b"],
        ];
        $dataSource = $this->getMock('Instagram2Vk\Interfaces\DataSourceInterface');
        $dataSource->expects($this->once())->method('getData')->will($this->returnValue($sample_data));

        $poster = new VkPoster(
            $this->scheduler,
            $this->transformer,
            $dataSource,
            $this->client,
            $this->access_token,
            $this->group_id
        );
        $poster->run();

    }


    public function test_posting_from_isntagram() {

        $dataSource = new InstagramCrawler($this->client,
            $this->instagram_access_token,
            [],
            [$this->instagram_access_token_username]
        );
        $dataSource->crawl();

        $poster = new VkPoster(
            $this->scheduler,
            $this->transformer,
            $dataSource,
            $this->client,
            $this->access_token,
            $this->group_id
        );

        $poster->run();
    }


}